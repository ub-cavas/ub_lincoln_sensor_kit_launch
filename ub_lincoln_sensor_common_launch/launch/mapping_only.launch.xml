<launch>
    <!-- Config-->
  <arg name="launch_driver" default="true" description="do launch driver"/>  
  <!-- LIDAR Config-->
  <arg name="vehicle_mirror_param_file" default="$(find-pkg-share ub_lincoln_vehicle_description)/config/mirror.param.yaml"/>

  <!-- Static transforms -->
  <!-- sensor_kit_base_link to Lidar -->
  <node pkg="tf2_ros" exec="static_transform_publisher"
        name="base_link_to_lidar" 
        args="--x 0.9 --y 0.0 --z 2.0 --roll 0.0 --pitch 0.0 --yaw 0.0 --frame-id base_link --child-frame-id velodyne_top"/>

  <!-- sensor_kit_base_link to gnss_link -->
  <node pkg="tf2_ros" exec="static_transform_publisher"
        name="base_link_to_gnss"
        args="--x 0.0 --y 0.0 --z 0.2 --roll 0.0 --pitch 0.0 --yaw 0.0 --frame-id base_link --child-frame-id gnss_link"/>

  <!-- sensor_kit_base_link to imu_link --> 
  <node pkg="tf2_ros" exec="static_transform_publisher"
        name="base_link_to_imu"
        args="--x 0.0 --y 0.0 --z 0.2 --roll 0.0 --pitch 0.0 --yaw -1.57079632679 --frame-id base_link --child-frame-id imu_link"/>

  <!-- Sensing -->
  <group>
    <push-ros-namespace namespace="sensing"/>

    <!-- LIDAR -->
    <group>
      <let name="driver_pointcloud_topic_name" value="/velodyne_points"/>
      <push-ros-namespace namespace="lidar"/>
      <group>
        <push-ros-namespace namespace="top"/>
        <include file="$(find-pkg-share ub_lincoln_sensor_common_launch)/launch/nebula_node_container.launch.py">
          <arg name="sensor_model" value="VLP32"/>
          <arg name="launch_driver" value="$(var launch_driver)"/>
          <arg name="config_file" value="$(find-pkg-share ub_lincoln_sensor_common_launch)/config/VLP32.param.yaml"/>
          <arg name="launch_driver_only" value="true"/>
          <arg name="vehicle_mirror_param_file" value="$(var vehicle_mirror_param_file)"/>
          <arg name="container_name" value="pointcloud_container"/>
        </include>
      </group>
    </group>

    <!-- GNSS -->
    <group>
      <let name="navsatfix_topic_name" value="/sensing/gnss/novatel/oem7/fix"/>
      <push-ros-namespace namespace="gnss"/>
      <group>
        <set_env name="NOVATEL_OEM7_DRIVER_PARAM_OVERRIDES_PATH" value="$(find-pkg-share ub_lincoln_sensor_common_launch)/config/novatel_overrides_std_msg_topics.yaml"/>
        <include file="$(find-pkg-share novatel_oem7_driver)/launch/oem7_net.launch.py">
          <arg name="oem7_ip_addr" value="192.168.100.201"/>
          <arg name="oem7_port" value="3005"/>
        </include>
      </group>
    </group>
  </group>

  <!-- Ros Bag Record -->
  <executable cmd="ros2 bag record /sensing/lidar/top/pointcloud_raw_ex /sensing/gnss/novatel/oem7/imu/data_raw /sensing/gnss/novatel/oem7/fix /tf_static /tf -o /host_data/test_map"/>
  
</launch>
