<launch>
  <arg name="launch_driver" default="true"/>
  <arg name="sensor_model" default="VLP32"/>
  <!-- <arg name="frame_id" default="velodyne_top"/> -->
  <!-- <arg name="host_ip" default="192.168.1.10"/> -->
  <arg name="vehicle_id" default="$(env VEHICLE_ID default)"/>
  <arg name="vehicle_info_param_file" default="$(find-pkg-share ub_lincoln_vehicle_description)/config/vehicle_info.param.yaml"/>
  <arg name="vehicle_mirror_param_file" default="$(find-pkg-share ub_lincoln_vehicle_description)/config/mirror.param.yaml"/>
  <arg name="pointcloud_container_name" default="pointcloud_container"/>
  <arg name="calib_file" default="$(find-pkg-share nebula_decoders)/calibration/velodyne/VLP32.yaml"/>
  <arg name="use_intra_process_comms" default="true"/>
  <arg name="pointcloud_container_name" default="pointcloud_container"/>


<!-- LIDAR -->

  <group>
    <push-ros-namespace namespace="lidar"/>

    <let name="driver_pointcloud_topic_name" value="/velodyne_points"/>

    <group>
      <push-ros-namespace namespace="top"/>
      <include file="$(find-pkg-share ub_lincoln_sensor_common_launch)/launch/nebula_node_container_test.launch.py">
        <arg name="sensor_model" value="$(var sensor_model)"/>
        <arg name="launch_hw" value="$(var launch_driver)"/>
        <arg name="config_file" value="$(find-pkg-share ub_lincoln_sensor_common_launch)/config/VLP32.param.yaml"/>
        <arg name="vehicle_mirror_param_file" value="$(var vehicle_mirror_param_file)"/>
        <arg name="vehicle_info_param_file" value="$(var vehicle_info_param_file)"/>
        <arg name="calib_file" value="$(var calib_file)"/>
        <arg name="use_intra_process" value="$(var use_intra_process_comms)"/>
        <arg name="container_name" value="pointcloud_container"/>
      </include>
      
      <!-- <include file="$(find-pkg-share autoware_pointcloud_preprocessor)/launch/preprocessor.launch.xml">
        <arg> -->
    </group>
  </group>
</launch>
